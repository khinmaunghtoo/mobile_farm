cmake_minimum_required(VERSION 3.16)

project(MobileFarm VERSION 0.1 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD_REQUIRED ON)


find_package(Qt6 REQUIRED COMPONENTS Quick QuickControls2)

qt_standard_project_setup(REQUIRES 6.8)

qt_add_executable(appMobileFarm
    main.cpp
)

source_group("QML Files" FILES
    Main.qml
    DeviceScanDialog.qml
)

qt_add_qml_module(appMobileFarm
    URI MobileFarm
    VERSION 1.0
    QML_FILES
        Main.qml
        DeviceScanDialog.qml

    SOURCES
        devicescanner.cpp
        devicescanner.h
        adbrunner.h 
        adbrunner.cpp
)

# --- 复制 third_party 到 .app/Contents/MacOS ---
set(THIRD_PARTY_DIR "${CMAKE_SOURCE_DIR}/third_party")
add_custom_command(TARGET appMobileFarm POST_BUILD
    COMMAND "${CMAKE_COMMAND}" -E copy_directory
            "${THIRD_PARTY_DIR}"
            "$<TARGET_FILE_DIR:appMobileFarm>/third_party"
    VERBATIM
)

# Qt for iOS sets MACOSX_BUNDLE_GUI_IDENTIFIER automatically since Qt 6.1.
# If you are developing for iOS or macOS you should consider setting an
# explicit, fixed bundle identifier manually though.
set_target_properties(appMobileFarm PROPERTIES
#    MACOSX_BUNDLE_GUI_IDENTIFIER com.example.appMobileFarm
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

target_link_libraries(appMobileFarm
    PRIVATE Qt6::Quick
    PRIVATE Qt6::QuickControls2

)

include(GNUInstallDirs)
install(TARGETS appMobileFarm
    BUNDLE DESTINATION .
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)
